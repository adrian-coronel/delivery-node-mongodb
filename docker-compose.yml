# Definición de la versión de la especificación de Docker Compose que se utilizará
version: '3'

# Definición de los servicios que compondrán la aplicación
services:
  # Servicio para la aplicación Node.js
  nodejs:
    # Configuración para construir la imagen de Docker para este servicio
    build:
      context: .                 # Contexto para la construcción de la imagen (directorio actual)
      dockerfile: Dockerfile     # Archivo Dockerfile a utilizar
    image: nodejs               # Nombre de la imagen resultante
    container_name: nodejs      # Nombre del contenedor
    restart: unless-stopped     # Política de reinicio del contenedor
    env_file: .env              # Archivo de variables de entorno
    environment:                # Variables de entorno adicionales
      - MONGO_USERNAME=$MONGO_USERNAME
      - MONGO_PASSWORD=$MONGO_PASSWORD
      - MONGO_HOSTNAME=db
      - MONGO_PORT=$MONGO_PORT
      - MONGO_DB=$MONGO_DB
    ports:                      # Mapeo de puertos entre el host y el contenedor
      - "11750:8080"            # Puerto 11750 del host redirigido al puerto 8080 del contenedor
    volumes:                    # Volúmenes para montar directorios entre el host y el contenedor
      - .:/home/acoronel/node/app        # Monta el directorio actual en /home/acoronel/node/app dentro del contenedor
      - acoronel_node_modules:/home/acoronel/node/app/node_modules  # Monta el volumen acoronel_node_modules dentro del contenedor
    networks:                   # Configuración de red para el servicio
      - acoronel_app-network             # Se une a la red llamada app-network
    command: ./wait-for.sh db:27017 -- /home/acoronel/node/app/node_modules/.bin/nodemon app.js
                                # Comando a ejecutar dentro del contenedor al iniciarlo

  # Servicio para la base de datos MongoDB
  db:
    image: mongo:4.1.8-xenial  # Imagen de MongoDB a utilizar
    container_name: db          # Nombre del contenedor
    restart: unless-stopped     # Política de reinicio del contenedor
    env_file: .env              # Archivo de variables de entorno
    environment:                # Variables de entorno adicionales
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_PASSWORD
    volumes:                    # Volúmenes para montar directorios entre el host y el contenedor
      - acoronel_dbdata:/data/db         # Monta el volumen acoronel_dbdata en /data/db dentro del contenedor
    networks:                   # Configuración de red para el servicio
      - acoronel_app-network             # Se une a la red llamada acoronel_app-network  

# Definición de redes que utilizarán los servicios
networks:
  acoronel_app-network:                  # Red llamada app-network
    driver: bridge              # Tipo de driver de red utilizado (bridge)

# Definición de volúmenes que utilizarán los servicios
volumes:
  acoronel_dbdata:                       # Volumen llamado acoronel_dbdata
  acoronel_node_modules:                 # Volumen llamado acoronel_node_modules
1