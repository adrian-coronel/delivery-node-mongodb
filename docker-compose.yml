# Definición de la versión de la especificación de Docker Compose que se utilizará
version: '3'

# Definición de los servicios que compondrán la aplicación
services:
  # Servicio para la aplicación Node.js
  nodejs-acoronel:
    # Configuración para construir la imagen de Docker para este servicio
    build:
      context: .                 # Contexto para la construcción de la imagen (directorio actual)
      dockerfile: Dockerfile     # Archivo Dockerfile a utilizar
    image: nodejs               # Nombre de la imagen resultante
    container_name: nodejs-acoronel      # Nombre del contenedor
    restart: unless-stopped     # Política de reinicio del contenedor
    env_file: .env              # Archivo de variables de entorno
    environment:                # Variables de entorno adicionales
      - MYSQL_HOSTNAME=mysqldb
      - MYSQL_PORT=3306
      - MYSQL_USER=$MYSQL_USER
      - MYSQL_PASSWORD=$MYSQL_PASSWORD
      - MYSQL_DATABASE=$MYSQL_DATABASE
    ports:                      # Mapeo de puertos entre el host y el contenedor
      - "11750:8080"            # Puerto 11750 del host redirigido al puerto 8080 del contenedor
    volumes:                    # Volúmenes para montar directorios entre el host y el contenedor
      - .:/home/node/app        # Monta el directorio actual en /home/acoronel/node/app dentro del contenedor
      - node_modules:/home/node/app/node_modules  # Monta el volumen acoronel_node_modules dentro del contenedor
    networks:                   # Configuración de red para el servicio
      - acoronel_app-network             # Se une a la red llamada app-network
    command: ./wait-for.sh mysqldb:3306 -- /home/node/app/node_modules/.bin/nodemon app.js
                                # Comando a ejecutar dentro del contenedor al iniciarlo

  mysqldb:
    image: mysql:5.7
    restart: unless-stopped
    env_file: ./.env
    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD
      - MYSQL_DATABASE=$MYSQL_DATABASE
    ports:
      - "$MYSQL_LOCAL_PORT:$MYSQL_DOCKER_PORT"
    volumes:
      - db:/var/lib/mysql

# Definición de redes que utilizarán los servicios
networks:
  acoronel_app-network:                  # Red llamada app-network
    driver: bridge              # Tipo de driver de red utilizado (bridge)

# Definición de volúmenes que utilizarán los servicios
volumes:
  db:                       # Volumen llamado db
  node_modules:                 # Volumen llamado node_modules
